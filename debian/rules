#!/usr/bin/make -f
# -*- makefile -*-

%:
	dh $@

override_dh_auto_build:
	dh_auto_build --buildsystem=nodejs
	# Step 1: build a temporary @rollup/plugin-typescript
	# 1.1 : ES
	cd packages/typescript && \
		mkdir dist && \
		NODE_PATH=node_modules tsc --module esnext --moduleResolution node --esModuleInterop --target es2015 src/index.ts
	cd packages/typescript/src && \
		tar cf - `find . -name '*.js' -type f` |(cd ../dist; tar xf -) && \
		find . -name '*.js' -type f -delete
	mkdir -p node_modules/@rollup/plugin-typescript/dist
	mv packages/typescript/dist node_modules/@rollup/plugin-typescript/dist/es
	for f in `find node_modules/@rollup/plugin-typescript/dist/es -name '*.js'`; do \
		ln -s `basename $$f` $${f%%.js}; \
	done
	## 1.2 : CJS
	#cd packages/typescript && \
	#	mkdir dist && \
	#	NODE_PATH=node_modules tsc --module commonjs --moduleResolution node --esModuleInterop src/index.ts
	#cd packages/typescript/src && \
	#	tar cf - `find . -name '*.js' -type f` |(cd ../dist; tar xf -) && \
	#	find . -name '*.js' -type f -delete
	#mkdir -p node_modules/@rollup/plugin-typescript/dist
	#mv packages/typescript/dist node_modules/@rollup/plugin-typescript/dist/cjs
	perl -pe 's/("name")/"type":"module",$$1/' <packages/typescript/package.json \
		> node_modules/@rollup/plugin-typescript/package.json
	# Step 2: upstream build
	cd packages/typescript && rollup -c
	rm -rf node_modules/@rollup/plugin-typescript/

override_dh_installchangelogs:
	dh_installchangelogs packages/typescript/CHANGELOG.md
